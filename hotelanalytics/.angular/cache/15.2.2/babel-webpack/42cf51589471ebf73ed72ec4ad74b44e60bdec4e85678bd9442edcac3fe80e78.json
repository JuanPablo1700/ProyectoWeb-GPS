{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet NuevohotelComponent = class NuevohotelComponent {\n  constructor(router, toastr, _newHotelService, _errorService) {\n    this.router = router;\n    this.toastr = toastr;\n    this._newHotelService = _newHotelService;\n    this._errorService = _errorService;\n    this.nombre = '';\n    this.direccion = '';\n    this.correo = '';\n    this.telefono = '';\n    this.estrellas = 0;\n    this.estado = '';\n  }\n  ngOnInit() {}\n  validar() {\n    //falta validar selects y que sean teléfonos y correos válidos\n    if (this.nombre.trim() == '') {\n      this.toastr.error('Campo nombre obligatorio', 'Error');\n      return;\n    }\n    if (this.direccion.trim() == '') {\n      this.toastr.error('Campo direccion obligatorio', 'Error');\n      return;\n    }\n    if (this.correo.trim() == '') {\n      this.toastr.error('Campo correo obligatorio', 'Error');\n      return;\n    }\n    if (this.telefono.trim() == '') {\n      this.toastr.error('Campo teléfono obligatorio', 'Error');\n      return;\n    }\n    if (this.estrellas == -1) {\n      this.toastr.error('Campo estrellas obligatorio', 'Error');\n      return;\n    }\n    if (this.estado.trim() == '') {\n      this.toastr.error('Campo estado obligatorio', 'Error');\n      return;\n    }\n    return true;\n  }\n  insertar() {\n    this.validar();\n    const hotel = {\n      nombre: this.nombre,\n      direccion: this.direccion,\n      correo: this.correo,\n      telefono: this.telefono,\n      estrellas: this.estrellas,\n      estado: this.estado\n    };\n    this._newHotelService.newHotel(hotel).subscribe({\n      next: res => {\n        this.toastr.success('Hotel registrado correctamente', 'Correcto');\n      },\n      error: error => {\n        this._errorService.msjError(error);\n      }\n    });\n  }\n  logOut() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('tipo_usuario');\n    this.router.navigate(['/login']);\n  }\n};\nNuevohotelComponent = __decorate([Component({\n  selector: 'app-nuevohotel',\n  templateUrl: './nuevohotel.component.html',\n  styleUrls: ['./nuevohotel.component.css']\n})], NuevohotelComponent);\nexport { NuevohotelComponent };","map":{"version":3,"mappings":"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","names":["Component","NuevohotelComponent","constructor","router","toastr","_newHotelService","_errorService","ngOnInit","validar","nombre","trim","error","direccion","correo","telefono","estrellas","estado","insertar","hotel","newHotel","subscribe","next","res","success","msjError","logOut","localStorage","removeItem","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/arlethe/Documents/Escuela/GPS/ProyectoWeb-GPS/hotelanalytics/src/app/components/nuevohotel/nuevohotel.component.ts"],"sourcesContent":["import { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { Hotel } from './../../interfaces/hotel';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NewHotelService } from 'src/app/services/new-hotel.service';\nimport { ErrorService } from 'src/app/services/error.service';\n\n@Component({\n  selector: 'app-nuevohotel',\n  templateUrl: './nuevohotel.component.html',\n  styleUrls: ['./nuevohotel.component.css']\n})\nexport class NuevohotelComponent implements OnInit {\n\n  nombre: string = '';\n  direccion: string = '';\n  correo: string = '';\n  telefono: string = '';\n  estrellas: number = 0;\n  estado: string = '';\n\n  constructor(\n    private router: Router,\n    private toastr: ToastrService,\n    private _newHotelService: NewHotelService,\n    private _errorService: ErrorService\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  private validar() {\n    //falta validar selects y que sean teléfonos y correos válidos\n    if (this.nombre.trim() == '') {\n      this.toastr.error('Campo nombre obligatorio', 'Error')\n      return\n    }\n    if (this.direccion.trim() == '') {\n      this.toastr.error('Campo direccion obligatorio', 'Error')\n      return\n    }\n    if (this.correo.trim() == '') {\n      this.toastr.error('Campo correo obligatorio', 'Error')\n      return\n    }\n    if (this.telefono.trim() == '') {\n      this.toastr.error('Campo teléfono obligatorio', 'Error')\n      return\n    }\n    if (this.estrellas == -1) {\n      this.toastr.error('Campo estrellas obligatorio', 'Error')\n      return\n    }\n    if (this.estado.trim() == '') {\n      this.toastr.error('Campo estado obligatorio', 'Error')\n      return\n    }\n    return true;\n  }\n\n  insertar() {\n\n    this.validar();\n\n    const hotel: Hotel = {\n      nombre: this.nombre,\n      direccion: this.direccion,\n      correo: this.correo,\n      telefono: this.telefono,\n      estrellas: this.estrellas,\n      estado: this.estado\n    }\n\n    this._newHotelService.newHotel(hotel).subscribe({\n      next: (res) => {\n        this.toastr.success('Hotel registrado correctamente', 'Correcto');\n      },\n      error: (error: HttpErrorResponse) => {\n        this._errorService.msjError(error);\n      }\n    })\n  }\n\n  logOut() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('tipo_usuario');\n    this.router.navigate(['/login'])\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}