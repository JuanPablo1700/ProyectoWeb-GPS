{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nexport const canActivate = (route, state) => {\n  const authService = inject(AuthenticationService);\n  const router = inject(Router);\n  return authService.checkLogin().pipe(map(() => {}));\n};\nexport class AuthGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const token = localStorage.getItem('token');\n    if (token == undefined) {\n      this.router.navigate(['login']);\n    }\n    return true;\n  }\n}","map":{"version":3,"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAAgDC,MAAM,QAAsC,iBAAiB;AAI7G,OAAO,MAAMC,WAAW,GAAkB,CACxCC,KAA6B,EAC7BC,KAA0B,KACxB;EACF,MAAMC,WAAW,GAAGL,MAAM,CAACM,qBAAqB,CAAC;EACjD,MAAMC,MAAM,GAAGP,MAAM,CAACC,MAAM,CAAC;EAE7B,OAAOI,WAAW,CAACG,UAAU,EAAE,CAACC,IAAI,CAClCC,GAAG,CAAC,MAAK,CAET,CAAC,CAAC,CACH;AACH,CAAC;AACD,OAAM,MAAOC,SAAS;EAEpBC,YACUL,MAAc;IAAd,WAAM,GAANA,MAAM;EAGhB;EAEAL,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAExB,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,IAAIG,SAAS,EAAE;MACtB,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;IAEjC,OAAO,IAAI;EACf","names":["inject","Router","canActivate","route","state","authService","AuthenticationService","router","checkLogin","pipe","map","AuthGuard","constructor","token","localStorage","getItem","undefined","navigate"],"sourceRoot":"","sources":["C:\\Users\\Juan Pablo\\OneDrive\\Documentos\\GPS\\ProyectoWeb-GPS\\hotelanalytics\\src\\app\\utils\\auth.guard.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\nexport const canActivate: CanActivateFn = (\r\n  route: ActivatedRouteSnapshot,\r\n  state: RouterStateSnapshot\r\n) => {\r\n  const authService = inject(AuthenticationService);\r\n  const router = inject(Router);\r\n\r\n  return authService.checkLogin().pipe(\r\n    map(() => {\r\n      \r\n    })\r\n  )\r\n} \r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) {\r\n\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    \r\n      const token = localStorage.getItem('token')\r\n      if (token == undefined) {\r\n        this.router.navigate(['login']);\r\n      }\r\n      return true;\r\n  }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}