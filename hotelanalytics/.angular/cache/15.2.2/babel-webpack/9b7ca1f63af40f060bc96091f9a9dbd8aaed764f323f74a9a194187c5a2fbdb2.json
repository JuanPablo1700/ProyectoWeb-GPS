{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AddTokenInterceptor {\n  constructor(router) {\n    this.router = router;\n  }\n  intercept(request, next) {\n    const token = localStorage.getItem('token');\n    if (token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n    return next.handle(request).pipe(catchError(error => {\n      if (error.status === 401) {\n        this._error;\n        this.router.navigate(['/login']);\n      }\n      return throwError(() => new Error('Error'));\n    }));\n  }\n}\nAddTokenInterceptor.ɵfac = function AddTokenInterceptor_Factory(t) {\n  return new (t || AddTokenInterceptor)(i0.ɵɵinject(i1.Router));\n};\nAddTokenInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AddTokenInterceptor,\n  factory: AddTokenInterceptor.ɵfac\n});","map":{"version":3,"mappings":"AAQA,SAAqBA,UAAU,EAAEC,UAAU,QAAQ,MAAM;;;AAIzD,OAAM,MAAOC,mBAAmB;EAE9BC,YACUC,MAAc;IAAd,WAAM,GAANA,MAAM;EACb;EAEHC,SAAS,CAACC,OAA6B,EAAEC,IAAiB;IACxD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIF,KAAK,EAAE;MACTF,OAAO,GAAGA,OAAO,CAACK,KAAK,CAAC;QAAEC,UAAU,EAAE;UAACC,aAAa,EAAE,UAAUL,KAAK;QAAE;MAAC,CAAC,CAAC;;IAG5E,OAAOD,IAAI,CAACO,MAAM,CAACR,OAAO,CAAC,CAACS,IAAI,CAC9Bf,UAAU,CAAEgB,KAAwB,IAAI;MACtC,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;QACxB,IAAI,CAACC,MAAM;QACX,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;MAElC,OAAOlB,UAAU,CAAC,MAAM,IAAImB,KAAK,CAAC,OAAO,CAAC,CAAC;IAC7C,CAAC,CAAC,CACH;EACH;;AAtBWlB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAmB,SAAnBnB,mBAAmB;AAAA","names":["catchError","throwError","AddTokenInterceptor","constructor","router","intercept","request","next","token","localStorage","getItem","clone","setHeaders","Authorization","handle","pipe","error","status","_error","navigate","Error","factory"],"sourceRoot":"","sources":["C:\\Users\\Juan Pablo\\OneDrive\\Documentos\\GPS\\ProyectoWeb-GPS\\hotelanalytics\\src\\app\\utils\\add-token.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable, catchError, throwError } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AddTokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (token) {\r\n      request = request.clone({ setHeaders: {Authorization: `Bearer ${token}`}})\r\n    }\r\n\r\n    return next.handle(request).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (error.status === 401) {\r\n          this._error\r\n          this.router.navigate(['/login']);\r\n        }\r\n        return throwError(() => new Error('Error'))\r\n      })\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}